openapi: "3.0.2"
info:
  title: GA4GH Discovery Search API
  version: 0.2.0
  description: |
    Search is an API for searching biomedical data.

    More information on [GitHub](https://github.com/ga4gh-discovery/ga4gh-discovery-search).
  license:
    name: 'Apache 2.0'
    url: 'https://raw.githubusercontent.com/ga4gh-discovery/ga4gh-discovery-search/develop/LICENSE'
  contact:
    name: 'GA4GH Discovery Search Team'
    email: 'ga4gh-discovery-search@ga4gh.org'
security:
  - bearerAuth: []
paths:
  /tables:
    get:
      summary: List Tables
      description: Returns a list of Tables.
      operationId: listTables
      tags:
        - tables
      responses:
        '200':
          description: A list of Tables
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTablesResponse"
        '500':
          description: An unexpected error occurred
  /table/{table_name}/info:
    get:
      summary: Get a Table
      description: Returns the information about the Table identified by name.
      operationId: getTable
      tags:
        - tables
      parameters:
        - name: table_name
          in: path
          description: Unique Table name, unique to this implementation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A Table
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
        '404':
          description: This server does not implement the data operation
        '500':
          description: An unexpected error occurred
  /table/{table_name}/data:
    get:
      summary: Fetch data from a Table
      description: Optional operation that returns data from a Table
      operationId: getData
      tags:
        - tables
      parameters:
        - name: table_name
          in: path
          description: Unique Table name, unique to this implementation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data from the Table
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableData"
        '404':
          description: This server does not implement the data operation
        '500':
          description: An unexpected error occurred
  /search:
    post:
      summary: Perform a search on Tables
      description: Optional operation that accepts a SearchRequest and returns a TableData
      operationId: search
      requestBody:
        description: Query to execute
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
      tags:
        - search
      responses:
        '200':
          description: Query results returned as TableData
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableData"
        '404':
          description: This server does not implement the search operation
        '500':
          description: An unexpected error occurred
  /service-info:
    get:
      summary: 'Show information about the Search service'
      operationId: getServiceInfo
      tags:
        - service-info
      responses:
        '200':
          description: |
            Show information about this Search service.

            Use `"type": {"group": "org.ga4gh", "artifact": "search", "version": "0.1.0"}` when implementing this specification directly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '500':
          description: An unexpected error occurred
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    ListTablesResponse:
      required:
        - tables
      type: object
      properties:
        tables:
          type: array
          items:
            $ref: "#/components/schemas/Table"
        pagination:
          $ref: '#/components/schemas/Pagination'
    Table:
      required:
        - name
        - data_model
      type: object
      properties:
        name:
          type: string
          description: Table name
        description:
          type: string
          description: Optional description of the Table
        data_model:
          $ref: "http://json-schema.org/draft-07/schema#"
      description: |
        Describes a Table hosted by this search node.
    TableData:
      required:
        - data_model
        - data
      type: object
      properties:
        data_model:
          $ref: "http://json-schema.org/draft-07/schema#"
        data:
          type: array
          description: Page of JSON values, each adhering to the schema given in the `data_model` property
          items:
            # Each item must conform to the schema provided in the "data_model" section of this Table.
            # Not sure if this constraint can be expressed in OpenAPI 3.0.
            type: object
        pagination:
          $ref: "#/components/schemas/Pagination"
      description: A paginated collection of tabular data
    Pagination:
      type: object
      properties:
        next_page_url:
          type: string
          description: URL pointing to the next page of the same Table. Null or absent on last page.
          format: uri
    SearchRequest:
      description:
        Request body containing an SQL query with zero or more positional parameters.
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: Query in SQL. Supported SQL grammar, data types, and functions are described in [the specification](https://github.com/ga4gh-discovery/ga4gh-search/blob/develop/SEARCHSPEC.md#query).
          example: SELECT some_string, some_num FROM a_table WHERE some_string=? AND some_num=?
        parameters:
          type: array
          items: {}
          description: Positional parameters for the query in `query` property.
          example: [ hello, 42 ]
    Service:
      $ref: 'https://raw.githubusercontent.com/ga4gh-discovery/ga4gh-service-info/v1.0.0/service-info.yaml#/components/schemas/Service'